// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: common/tree.proto

package tree

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TreeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*TreeNode `protobuf:"bytes,1,rep,name=Nodes,proto3" json:"Nodes,omitempty"`
}

func (x *TreeResult) Reset() {
	*x = TreeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_tree_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeResult) ProtoMessage() {}

func (x *TreeResult) ProtoReflect() protoreflect.Message {
	mi := &file_common_tree_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeResult.ProtoReflect.Descriptor instead.
func (*TreeResult) Descriptor() ([]byte, []int) {
	return file_common_tree_proto_rawDescGZIP(), []int{0}
}

func (x *TreeResult) GetNodes() []*TreeNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type TreeNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string      `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Title    string      `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Level    int32       `protobuf:"varint,3,opt,name=Level,proto3" json:"Level,omitempty"`
	Checked  bool        `protobuf:"varint,4,opt,name=Checked,proto3" json:"Checked,omitempty"`
	IsLeaf   bool        `protobuf:"varint,5,opt,name=IsLeaf,proto3" json:"IsLeaf,omitempty"`
	Origin   *anypb.Any  `protobuf:"bytes,6,opt,name=Origin,proto3" json:"Origin,omitempty"`
	Children []*TreeNode `protobuf:"bytes,7,rep,name=Children,proto3" json:"Children,omitempty"`
}

func (x *TreeNode) Reset() {
	*x = TreeNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_tree_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeNode) ProtoMessage() {}

func (x *TreeNode) ProtoReflect() protoreflect.Message {
	mi := &file_common_tree_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeNode.ProtoReflect.Descriptor instead.
func (*TreeNode) Descriptor() ([]byte, []int) {
	return file_common_tree_proto_rawDescGZIP(), []int{1}
}

func (x *TreeNode) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TreeNode) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TreeNode) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *TreeNode) GetChecked() bool {
	if x != nil {
		return x.Checked
	}
	return false
}

func (x *TreeNode) GetIsLeaf() bool {
	if x != nil {
		return x.IsLeaf
	}
	return false
}

func (x *TreeNode) GetOrigin() *anypb.Any {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *TreeNode) GetChildren() []*TreeNode {
	if x != nil {
		return x.Children
	}
	return nil
}

var File_common_tree_proto protoreflect.FileDescriptor

var file_common_tree_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x74, 0x72, 0x65, 0x65, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x0a, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x05, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x08, 0x54, 0x72, 0x65,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x49, 0x73, 0x4c, 0x65, 0x61, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49,
	0x73, 0x4c, 0x65, 0x61, 0x66, 0x12, 0x2c, 0x0a, 0x06, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x54, 0x72, 0x65,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x42,
	0x32, 0x5a, 0x18, 0x73, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x63, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x72, 0x65, 0x65, 0xaa, 0x02, 0x15, 0x53, 0x61,
	0x69, 0x4c, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_tree_proto_rawDescOnce sync.Once
	file_common_tree_proto_rawDescData = file_common_tree_proto_rawDesc
)

func file_common_tree_proto_rawDescGZIP() []byte {
	file_common_tree_proto_rawDescOnce.Do(func() {
		file_common_tree_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_tree_proto_rawDescData)
	})
	return file_common_tree_proto_rawDescData
}

var file_common_tree_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_common_tree_proto_goTypes = []interface{}{
	(*TreeResult)(nil), // 0: tree.TreeResult
	(*TreeNode)(nil),   // 1: tree.TreeNode
	(*anypb.Any)(nil),  // 2: google.protobuf.Any
}
var file_common_tree_proto_depIdxs = []int32{
	1, // 0: tree.TreeResult.Nodes:type_name -> tree.TreeNode
	2, // 1: tree.TreeNode.Origin:type_name -> google.protobuf.Any
	1, // 2: tree.TreeNode.Children:type_name -> tree.TreeNode
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_common_tree_proto_init() }
func file_common_tree_proto_init() {
	if File_common_tree_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_tree_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_tree_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_tree_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_tree_proto_goTypes,
		DependencyIndexes: file_common_tree_proto_depIdxs,
		MessageInfos:      file_common_tree_proto_msgTypes,
	}.Build()
	File_common_tree_proto = out.File
	file_common_tree_proto_rawDesc = nil
	file_common_tree_proto_goTypes = nil
	file_common_tree_proto_depIdxs = nil
}
